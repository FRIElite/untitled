{"version":3,"sources":["components/theme/custom_theme.ts","components/design/navbar/Navbar.tsx","components/design/home/Home.tsx","utils/utils.ts","components/design/extra/MovieGenre.tsx","components/design/list/List.tsx","components/design/swipe/Swipe.tsx","components/design/login/LoginComponents.tsx","components/design/login/Login.tsx","components/design/rate/Rate.tsx","App.tsx","default/serviceWorker.ts","index.tsx"],"names":["theme","colors","light","dark","Navbar","useDisclosure","isOpen","onOpen","onClose","useColorMode","colorMode","toggleColorMode","useCookies","removeCookie","is_light","color_mode_icon","color_mode_color","Logout","window","location","reload","NavbarDrawer","Drawer","placement","borderBottomWidth","Flex","direction","justify","align","Avatar","name","src","Button","variantColor","variant","size","ml","onClick","List","styleType","to","color","width","padding","IconButton","aria-label","icon","Heading","as","Link","Home","randomColor","Math","floor","random","length","SimpleGrid","columns","spacing","mr","mt","height","genres","id","getGenreById","find","genre","MovieGenre","props","Box","border","mb","borderRadius","fontWeight","fontSize","textTransform","cookies","useQuery","a","fetch","auth","username","then","res","json","isLoading","data","error","React","useState","showAmount","setShowAmount","console","log","movie_list","useMemo","Skeleton","movies","i","ratedMovies","push","MovieDetails","movie_data","index","hover","setHover","setData","useEffect","_id","bg","onMouseEnter","onMouseLeave","transition","Image","poster_path","alt","title","genre_ids","map","children","Text","release_date","overview","Array","fill","userRating","Icon","Swipe","rating","setRating","movie_thumb","position","top","w","whiteSpace","textAlign","borderColor","wrap","maxWidth","pr","pl","h","Slider","max","min","defaultValue","onChange","value","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","LoginBox","alignItems","Login","setCookie","history","useHistory","LoginForm","onSubmit","values","actions","password","setSubmitting","validateName","initialValues","handleSubmit","validate","field","form","FormControl","isInvalid","errors","touched","FormLabel","htmlFor","Input","placeholder","FormErrorMessage","PasswordInput","isSubmitting","type","show","setShow","InputGroup","Rate","unratedMovies","hide","setHide","vote","AppBase","validAuth","setValidAuth","exact","path","App","ThemeProvider","customTheme","ColorModeProvider","CSSReset","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.0ea34060.chunk.js","sourcesContent":["import { theme } from '@chakra-ui/core';\r\n\r\ntype Colors = {\r\n\r\n};\r\n\r\nconst light: Colors = {\r\n\r\n};\r\n\r\nconst dark: Colors = {\r\n\r\n};\r\n\r\nexport default {\r\n    ...theme,\r\n    colors: {\r\n        ...theme.colors,\r\n        light,\r\n        dark\r\n    },\r\n};\r\n","import React, { ReactElement } from 'react';\nimport {\n    Flex,\n    Box,\n    Drawer,\n    useDisclosure,\n    DrawerOverlay,\n    DrawerContent,\n    DrawerHeader,\n    DrawerBody,\n    IconButton,\n    useColorMode,\n    Divider,\n    Heading,\n    DrawerCloseButton,\n    List,\n    ListItem,\n    Avatar,\n    Button,\n} from '@chakra-ui/core';\nimport { Link } from 'react-router-dom';\nimport { useCookies } from 'react-cookie';\nexport function Navbar(): ReactElement {\n    const { isOpen, onOpen, onClose } = useDisclosure();\n    const { colorMode, toggleColorMode } = useColorMode();\n    const [cookies, setCookie, removeCookie] = useCookies(['reco']);\n    const is_light: boolean = colorMode == 'light';\n    const color_mode_icon: any = is_light ? 'sun' : 'moon';\n    const color_mode_color: any = is_light ? 'yellow' : 'gray';\n\n    const Logout = () => {\n        removeCookie('auth');\n        return window.location.reload(false);\n    };\n\n    const NavbarDrawer = (): ReactElement => {\n        return (\n            <Drawer placement=\"right\" onClose={onClose} isOpen={isOpen}>\n                <DrawerOverlay />\n                <DrawerContent>\n                    <DrawerCloseButton />\n                    <DrawerHeader borderBottomWidth=\"1px\">\n                        <Flex direction=\"row\" justify=\"flex-start\" align=\"center\">\n                            <Avatar name=\"Dan Abrahmov\" src=\"https://bit.ly/dan-abramov\" />\n                            <Button variantColor=\"red\" variant=\"outline\" size=\"sm\" ml=\"15px\" onClick={Logout}>\n                                Logout\n                            </Button>\n                        </Flex>\n                    </DrawerHeader>\n                    <DrawerBody>\n                        <List styleType=\"disc\">\n                            <ListItem>\n                                <Link to=\"/\" color=\"cyan.500\">\n                                    Home\n                                </Link>\n                            </ListItem>\n                            <ListItem>\n                                <Link to=\"/list\" color=\"cyan.500\">\n                                    List\n                                </Link>\n                            </ListItem>\n                            <ListItem>\n                                <Link to=\"/swipe\" color=\"cyan.500\">\n                                    Swipe\n                                </Link>\n                            </ListItem>\n                        </List>\n                    </DrawerBody>\n                </DrawerContent>\n            </Drawer>\n        );\n    };\n\n    return (\n        <Flex width=\"100%\" direction=\"column\" justify=\"flex-start\" align=\"center\" padding=\"15px 15px 30px 15px\">\n            <Flex width=\"100%\" direction=\"row\" justify=\"space-between\" align=\"center\">\n                <IconButton\n                    variant=\"ghost\"\n                    variantColor={color_mode_color}\n                    aria-label=\"Call Sage\"\n                    icon={color_mode_icon}\n                    size=\"lg\"\n                    onClick={() => toggleColorMode()}\n                />\n                <Heading as={Link} {...{ to: '/' }} size=\"2xl\">\n                    Reco\n                </Heading>\n                {/* <IconButton\n                    variant=\"ghost\"\n                    variantColor=\"teal\"\n                    aria-label=\"Call Sage\"\n                    icon=\"drag-handle\"\n                    size=\"lg\"\n                    onClick={onOpen}\n                /> */}\n\n                <Avatar name=\"Dan Abrahmov\" src=\"https://bit.ly/dan-abramov\" onClick={onOpen} />\n            </Flex>\n            <NavbarDrawer />\n        </Flex>\n    );\n}\n","import { Box, Button, Flex, Heading, Image, SimpleGrid } from '@chakra-ui/core';\r\nimport React, { ReactElement, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport function Home(): ReactElement {\r\n    const randomColor = () => {\r\n        const colors = ['red', 'orange', 'yellow', 'green', 'teal', 'cyan', 'purple'];\r\n\r\n        return colors[Math.floor(Math.random() * colors.length)];\r\n    };\r\n\r\n    return (\r\n        <SimpleGrid columns={2} spacing={10} mr=\"30px\" ml=\"30px\" mt=\"50px\">\r\n            <Button\r\n                as={Link}\r\n                {...{ to: '/swipe' }}\r\n                height=\"100px\"\r\n                variant=\"outline\"\r\n                variantColor={randomColor()}\r\n                size=\"lg\"\r\n            >\r\n                {' '}\r\n                Swipe{' '}\r\n            </Button>\r\n            <Button\r\n                as={Link}\r\n                {...{ to: '/list' }}\r\n                height=\"100px\"\r\n                variant=\"outline\"\r\n                variantColor={randomColor()}\r\n                size=\"lg\"\r\n            >\r\n                {' '}\r\n                List{' '}\r\n            </Button>\r\n            <Button\r\n                as={Link}\r\n                {...{ to: '/rate' }}\r\n                height=\"100px\"\r\n                variant=\"outline\"\r\n                variantColor={randomColor()}\r\n                size=\"lg\"\r\n            >\r\n                {' '}\r\n                Rate{' '}\r\n            </Button>\r\n        </SimpleGrid>\r\n    );\r\n}\r\n","const genres = [\n    {\n        id: 28,\n        name: 'Action',\n    },\n    {\n        id: 12,\n        name: 'Adventure',\n    },\n    {\n        id: 16,\n        name: 'Animation',\n    },\n    {\n        id: 35,\n        name: 'Comedy',\n    },\n    {\n        id: 80,\n        name: 'Crime',\n    },\n    {\n        id: 99,\n        name: 'Documentary',\n    },\n    {\n        id: 18,\n        name: 'Drama',\n    },\n    {\n        id: 10751,\n        name: 'Family',\n    },\n    {\n        id: 14,\n        name: 'Fantasy',\n    },\n    {\n        id: 36,\n        name: 'History',\n    },\n    {\n        id: 27,\n        name: 'Horror',\n    },\n    {\n        id: 10402,\n        name: 'Music',\n    },\n    {\n        id: 9648,\n        name: 'Mystery',\n    },\n    {\n        id: 10749,\n        name: 'Romance',\n    },\n    {\n        id: 878,\n        name: 'Science Fiction',\n    },\n    {\n        id: 10770,\n        name: 'TV Movie',\n    },\n    {\n        id: 53,\n        name: 'Thriller',\n    },\n    {\n        id: 10752,\n        name: 'War',\n    },\n    {\n        id: 37,\n        name: 'Western',\n    },\n];\n\nexport function getGenreById(id: any) {\n    return genres.find((genre: any) => genre.id == id)?.name;\n}\n","import { Box } from '@chakra-ui/core';\nimport React, { ReactElement } from 'react';\n\nexport function MovieGenre({ ...props }: any): ReactElement {\n    return (\n        <Box\n            {...props}\n            border=\"1px solid #9F7AEA\"\n            mb=\"5px\"\n            borderRadius=\"4px\"\n            padding=\"0px 4px 0px 4px\"\n            fontWeight=\"500\"\n            color=\"#9F7AEA\"\n            fontSize={10}\n            textTransform=\"capitalize\"\n        />\n    );\n}\n","import { Box, Flex, Text, SimpleGrid, Image, Button, Skeleton, Heading, Icon, useColorMode } from '@chakra-ui/core';\nimport React, { ReactElement } from 'react';\nimport { useCookies } from 'react-cookie';\nimport { useQuery } from 'react-query';\nimport { getGenreById } from '../../../utils/utils';\nimport { MovieGenre } from '../extra/MovieGenre';\n\nconst movies_data = [\n    {\n        image_url:\n            'https://m.media-amazon.com/images/M/MV5BNDYxNjQyMjAtNTdiOS00NGYwLWFmNTAtNThmYjU5ZGI2YTI1XkEyXkFqcGdeQXVyMTMxODk2OTU@._V1_.jpg',\n        title: 'The Avengers',\n        release_date: '4th May 2012',\n        genres: ['Action', 'Adventure', 'Sci-Fi'],\n    },\n    {\n        image_url:\n            'https://m.media-amazon.com/images/M/MV5BNDYxNjQyMjAtNTdiOS00NGYwLWFmNTAtNThmYjU5ZGI2YTI1XkEyXkFqcGdeQXVyMTMxODk2OTU@._V1_.jpg',\n        title: 'The Avengers',\n        release_date: '4th May 2012',\n        genres: ['Action', 'Adventure', 'Sci-Fi'],\n    },\n    {\n        image_url:\n            'https://m.media-amazon.com/images/M/MV5BNDYxNjQyMjAtNTdiOS00NGYwLWFmNTAtNThmYjU5ZGI2YTI1XkEyXkFqcGdeQXVyMTMxODk2OTU@._V1_.jpg',\n        title: 'The Avengers',\n        release_date: '4th May 2012',\n        genres: ['Action', 'Adventure', 'Sci-Fi'],\n    },\n    {\n        image_url:\n            'https://m.media-amazon.com/images/M/MV5BNDYxNjQyMjAtNTdiOS00NGYwLWFmNTAtNThmYjU5ZGI2YTI1XkEyXkFqcGdeQXVyMTMxODk2OTU@._V1_.jpg',\n        title: 'The Avengers',\n        release_date: '4th May 2012',\n        genres: ['Action', 'Adventure', 'Sci-Fi'],\n    },\n    {\n        image_url:\n            'https://m.media-amazon.com/images/M/MV5BNDYxNjQyMjAtNTdiOS00NGYwLWFmNTAtNThmYjU5ZGI2YTI1XkEyXkFqcGdeQXVyMTMxODk2OTU@._V1_.jpg',\n        title: 'The Avengers',\n        release_date: '4th May 2012',\n        genres: ['Action', 'Adventure', 'Sci-Fi'],\n    },\n];\n\nexport function List(): ReactElement {\n    const [cookies, setCookie, removeCookie] = useCookies(['reco']);\n    let { isLoading, error, data }: any = useQuery<any, any>('repoData', async () =>\n        fetch((process.env.REACT_APP_URL || 'localhost') + '/user/' + cookies?.auth?.username).then((res) => res.json())\n    );\n\n    const [showAmount, setShowAmount] = React.useState(5);\n    console.log(data);\n\n    const movie_list = React.useMemo(() => {\n        if (isLoading) return <Skeleton width=\"100%\" height=\"100px\" />;\n        const movies = [];\n        for (let i = 0; i < data?.ratedMovies?.length || 0; i++) {\n            if (i >= showAmount) break;\n            movies.push(<MovieDetails movie_data={data?.ratedMovies[i]} index={i}/>);\n        }\n        return (\n            <SimpleGrid columns={1} spacing={1}>\n                {movies}\n            </SimpleGrid>\n        );\n    }, [data, showAmount]);\n    return (\n        <Box mr=\"15px\" ml=\"15px\">\n            {movie_list}\n            {showAmount < data?.ratedMovies?.length && (\n                <Button borderRadius=\"0px\" width=\"100%\" mt={1} onClick={() => setShowAmount(showAmount + 5)}>\n                    Load more\n                </Button>\n            )}\n        </Box>\n    );\n}\nfunction MovieDetails({ movie_data, index }: any) {\n    const [hover, setHover] = React.useState(false);\n    const { colorMode, toggleColorMode } = useColorMode();\n    const is_light: boolean = colorMode == 'light';\n    const [movie, setMovie] = React.useState();\n    const [cookies, setCookie, removeCookie] = useCookies(['reco']);\n    // let { isLoading, error, data }: any = useQuery<any, any>([`movie_data_${index}`, index], async () =>\n    //     fetch((process.env.REACT_APP_URL || 'localhost') + '/movie/' + movie_data._id).then((res) => res.json())\n    // );\n    // console.log({new_data: data});\n    const [data, setData] = React.useState<any>();\n    React.useEffect(() => {\n        fetch((process.env.REACT_APP_URL || 'localhost') + '/movie/' + movie_data._id).then((res) => res.json()).then((res) => {\n            setData(res);\n        });\n        console.log((process.env.REACT_APP_URL || 'localhost') + '/movie/' + movie_data._id);\n        \n    })\n    // movie_data = {\n    //     image_url:\n    //         'https://m.media-amazon.com/images/M/MV5BNDYxNjQyMjAtNTdiOS00NGYwLWFmNTAtNThmYjU5ZGI2YTI1XkEyXkFqcGdeQXVyMTMxODk2OTU@._V1_.jpg',\n    //     title: 'The Avengers',\n    //     release_date: '4th May 2012',\n    //     genres: ['Action', 'Adventure', 'Sci-Fi'],\n    // };\n    // if(isLoading || error) return <Skeleton width=\"100%\" height=\"100px\" />;\n    if(!data) return <Skeleton width=\"100%\" height=\"100px\" />;\n    return (\n        <Flex\n            bg={is_light ? 'gray.100' : 'gray.700'}\n            padding=\"5px 5px 5px 5px\"\n            onMouseEnter={() => setHover(true)}\n            onMouseLeave={() => setHover(false)}\n            transition=\"ease-in-out height 0.5s\"\n            direction=\"row\"\n            justify=\"space-between\"\n            height={hover ? '300px' : '80px'}\n        >\n            <Flex direction=\"row\">\n                <Image height=\"100%\" src={data?.poster_path} alt=\"Dan Abramov\" border=\"1px solid white\" />\n                <Flex direction=\"column\" justify=\"flex-start\" height=\"100%\" ml=\"15px\">\n                    <Heading size=\"lg\" mb=\"5px\">\n                        {data.title}\n                    </Heading>\n                    <Flex direction=\"row\" mb=\"10px\">\n                        {data?.genre_ids?.map((genre: string) => (\n                            <MovieGenre mr=\"5px\" children={getGenreById( genre)} />\n                        ))}\n                    </Flex>\n\n                    {hover && (\n                        <Flex direction=\"column\" justify=\"flex-start\">\n                            <Text>Release date: {data?.release_date}</Text>\n                            <Text>{data?.overview}</Text>\n                        </Flex>\n                    )}\n                </Flex>\n            </Flex>\n            <Flex direction=\"column\" height=\"100%\" justify=\"flex-start\" mr=\"15px\" mt=\"20px\">\n                <Flex direction=\"row\">\n                    {new Array(10).fill(0).map((a: any, i: number) => {\n                        const color: string = i < movie_data.userRating ? 'yellow.300' : is_light ? 'gray.300' : 'white';\n                        return <Icon name=\"star\" color={color} mr=\"3px\" size=\"30px\" />;\n                    })}\n                </Flex>\n            </Flex>\n        </Flex>\n    );\n}\n\n/* \n\"{\n  \"movie_data\": {\n    \"_id\": \"5fa74a1433af7d2a2ad94ef6\",\n    \"popularity\": 139.434,\n    \"vote_count\": 48,\n    \"video\": false,\n    \"poster_path\": \"http://image.tmdb.org/t/p/w500/22jwKxZf4rcrmh2NS07SZAQYYNY.jpg\",\n    \"id\": 604578,\n    \"adult\": false,\n    \"backdrop_path\": \"/324jDHMRHWZ8HLbjRJNwVPYJZT0.jpg\",\n    \"original_language\": \"en\",\n    \"original_title\": \"Spontaneous\",\n    \"genre_ids\": [\n      35,\n      27,\n      878,\n      10749\n    ],\n    \"title\": \"Spontaneous\",\n    \"vote_average\": 7.3,\n    \"overview\": \"When students in their high school begin inexplicably exploding (literally...), seniors Mara and Dylan struggle to survive in a world where each moment may be their last.\",\n    \"release_date\": \"2020-10-02\"\n  }\n}\"\n\n*/","import React, { ReactElement, Component } from 'react';\nimport {\n    AspectRatioBox,\n    Flex,\n    Heading,\n    IconButton,\n    Image,\n    useColorMode,\n    Text,\n    Slider,\n    SliderTrack,\n    SliderFilledTrack,\n    SliderThumb,\n    Box,\n    Tag,\n    Icon,\n    Button,\n    Skeleton,\n} from '@chakra-ui/core';\nimport { useQuery, QueryCache, ReactQueryCacheProvider } from 'react-query';\nimport { useTrail, animated } from 'react-spring';\nimport { MovieGenre } from '../extra/MovieGenre';\nimport { useCookies } from 'react-cookie';\nimport { getGenreById } from '../../../utils/utils';\nexport function Swipe(): ReactElement {\n    const [cookies, setCookie, removeCookie] = useCookies(['reco']);\n    console.log(cookies?.auth?.username);\n\n    let { isLoading, error, data }: any = useQuery<any, any>('swipe', () =>\n        fetch((process.env.REACT_APP_URL || 'localhost') + '/recommend/' + cookies?.auth?.username)\n            .then((res) => res.json())\n            .then((res) => {\n                return fetch((process.env.REACT_APP_URL || 'localhost') + '/movie/' + res._id).then((res) =>\n                    res.json()\n                );\n            })\n    );\n    const [rating, setRating] = React.useState(5);\n    const { colorMode, toggleColorMode } = useColorMode();\n    const is_light: boolean = colorMode == 'light';\n    const colors = ['red', 'green', 'blue', 'orange', 'purple', 'yellow'];\n\n    const max_rating: number = 10;\n\n    // const movie_data: any = {\n    //     image_url:\n    //         'https://m.media-amazon.com/images/M/MV5BNDYxNjQyMjAtNTdiOS00NGYwLWFmNTAtNThmYjU5ZGI2YTI1XkEyXkFqcGdeQXVyMTMxODk2OTU@._V1_.jpg',\n    //     title: 'The Avengers',\n    //     release_date: '4th May 2012',\n    //     genres: ['Action', 'Adventure', 'Sci-Fi'],\n    // };\n\n    console.log(data);\n\n    const movie_thumb = React.useMemo(\n        () => (\n            <Box position=\"absolute\" top={5}>\n                <Flex direction=\"column\" justify=\"flex-start\" align=\"center\" w=\"200px\">\n                    {isLoading ? (\n                        <Skeleton width=\"100%\" height=\"300px\" />\n                    ) : (\n                        <>\n                            <Heading size=\"lg\" mb=\"10px\" width=\"300px\" whiteSpace=\"normal\" textAlign=\"center\">\n                                {data.title}\n                            </Heading>\n                            <Image\n                                width=\"250px\"\n                                src={data?.poster_path}\n                                alt=\"Dan Abramov\"\n                                border=\"2px solid white\"\n                                borderColor={is_light ? 'black' : 'white'}\n                            />\n                            <Flex\n                                direction=\"row\"\n                                justify=\"flex-start\"\n                                align=\"flex-start\"\n                                mt=\"10px\"\n                                wrap=\"wrap\"\n                                maxWidth=\"100%\"\n                                position=\"relative\"\n                            >\n                                {data.genre_ids?.map((genre: string, i: number) => (\n                                    <MovieGenre mr={i !== data.genre_ids.length - 1 ? '5px' : '0px'} children={getGenreById(genre)} />\n                                ))}\n                            </Flex>\n                        </>\n                    )}\n                </Flex>\n            </Box>\n        ),\n        [data]\n    );\n\n    const vote = () => {\n        if (!data) return;\n        console.log({ data });\n\n        fetch((process.env.REACT_APP_URL || 'localhost') + '/vote/' + cookies?.auth?.username, {\n            method: 'PUT',\n            mode: 'cors',\n            cache: 'no-cache',\n            credentials: 'same-origin',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            redirect: 'follow',\n            referrerPolicy: 'no-referrer',\n            body: JSON.stringify({\n                _id: data._id,\n                userRating: rating,\n            }),\n        }).then(() => window.location.reload());\n    };\n\n    return (\n        <Flex width=\"100%\" direction=\"column\" justify=\"center\" align=\"center\" mt=\"0px\" pr=\"15%\" pl=\"15%\">\n            <Flex h=\"10px\" width=\"100%\" direction=\"row\" justify=\"center\">\n                {new Array(max_rating).fill(0).map((a: any, i: number) => {\n                    const color: string = i < rating ? 'yellow.300' : is_light ? 'gray.300' : 'white';\n                    return <Icon name=\"star\" color={color} mr=\"3px\" size=\"30px\" />;\n                })}\n            </Flex>\n            <Slider\n                max={max_rating}\n                min={0}\n                defaultValue={rating}\n                onChange={(value: number) => setRating(value)}\n                mt=\"35px\"\n            >\n                <SliderTrack />\n                <SliderFilledTrack />\n                <SliderThumb>\n                    <Box color=\"tomato\" />\n                    {movie_thumb}\n                </SliderThumb>\n            </Slider>\n            <Flex mt=\"500px\" direction=\"row\" w=\"100%\" justify=\"space-evenly\">\n                <Button width=\"30%\" variant=\"solid\" variantColor=\"green\" children=\"Vote\" onClick={vote} />\n                <Button\n                    width=\"30%\"\n                    variant=\"solid\"\n                    variantColor=\"blue\"\n                    children=\"Skip\"\n                    onClick={() => window.location.reload()}\n                />\n            </Flex>\n        </Flex>\n    );\n}\n","import React, { ReactElement } from 'react';\r\nimport { Flex } from '@chakra-ui/core';\r\n\r\nexport const LoginBox = ({ ...props }: any): ReactElement => (\r\n    <Flex\r\n        {...props} \r\n        width=\"100%\"\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        mt=\"50px\"\r\n    />\r\n);\r\n","import React, { ReactElement } from 'react';\r\nimport { useCookies } from 'react-cookie';\r\nimport {\r\n    FormControl,\r\n    FormLabel,\r\n    Input,\r\n    InputGroup,\r\n    InputRightElement,\r\n    IconButton,\r\n    FormErrorMessage,\r\n    Button,\r\n    Heading,\r\n} from '@chakra-ui/core';\r\nimport { Formik, Field } from 'formik';\r\nimport { LoginBox } from './LoginComponents';\r\nimport { LoginFormInputs } from './LoginTypes';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport function Login({ ...props }: any): ReactElement {\r\n    const [cookies, setCookie, removeCookie] = useCookies(['reco']);\r\n    const history = useHistory();\r\n\r\n    const onSubmit = (values: LoginFormInputs, actions: any) => {\r\n        setCookie('auth', {\r\n            username: values.username,\r\n            password: values.password,\r\n        });\r\n        history.push('/');\r\n        actions.setSubmitting(false);\r\n        window.location.reload();\r\n    };\r\n\r\n    return (\r\n        <LoginBox>\r\n            <Heading mb={3}>Login</Heading>\r\n            <LoginForm onSubmit={onSubmit} />\r\n        </LoginBox>\r\n    );\r\n}\r\n\r\nfunction LoginForm({ onSubmit, ...props }: any): ReactElement {\r\n    function validateName(value: any) {\r\n        return false;\r\n        let error;\r\n        if (!value) {\r\n            error = 'Name is required';\r\n        } else if (value !== 'Naruto') {\r\n            error = \"Jeez! You're not a fan 😱\";\r\n        }\r\n        return error;\r\n    }\r\n\r\n    return (\r\n        <Formik initialValues={{}} onSubmit={onSubmit}>\r\n            {(props: any) => (\r\n                <form onSubmit={props.handleSubmit}>\r\n                    <Field name=\"username\" validate={validateName}>\r\n                        {({ field, form }: any) => (\r\n                            <FormControl isInvalid={form.errors.name && form.touched.name} mb={3}>\r\n                                <FormLabel htmlFor=\"username\">Username</FormLabel>\r\n                                <Input {...field} id=\"username\" placeholder=\"Username\" />\r\n                                <FormErrorMessage>{form.errors.name}</FormErrorMessage>\r\n                            </FormControl>\r\n                        )}\r\n                    </Field>\r\n                    <Field name=\"password\" validate={validateName}>\r\n                        {({ field, form }: any) => (\r\n                            <FormControl isInvalid={form.errors.name && form.touched.name}>\r\n                                <FormLabel htmlFor=\"password\">Password</FormLabel>\r\n                                <PasswordInput {...field} id=\"password\" placeholder=\"password\" />\r\n                                <FormErrorMessage>{form.errors.name}</FormErrorMessage>\r\n                            </FormControl>\r\n                        )}\r\n                    </Field>\r\n                    <Button mt={4} variantColor=\"green\" isLoading={props.isSubmitting} type=\"submit\" width=\"100%\">\r\n                        Submit\r\n                    </Button>\r\n                </form>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\n\r\nfunction PasswordInput({ ...props }: any): ReactElement {\r\n    const [show, setShow] = React.useState(false);\r\n    const handleClick = () => setShow(!show);\r\n\r\n    return (\r\n        <InputGroup size=\"md\">\r\n            <Input {...props} pr=\"4.5rem\" type={show ? 'text' : 'password'} placeholder=\"Enter password\" />\r\n            <InputRightElement width=\"3rem\">\r\n                <IconButton\r\n                    h=\"1.75rem\"\r\n                    size=\"sm\"\r\n                    onClick={handleClick}\r\n                    aria-label=\"password_input\"\r\n                    icon={show ? 'view' : 'view-off'}\r\n                />\r\n            </InputRightElement>\r\n        </InputGroup>\r\n    );\r\n}\r\n","import {\n    Box,\n    Flex,\n    Text,\n    SimpleGrid,\n    Image,\n    Button,\n    Skeleton,\n    Heading,\n    Icon,\n    useColorMode,\n    IconButton,\n} from '@chakra-ui/core';\nimport React, { ReactElement } from 'react';\nimport { useCookies } from 'react-cookie';\nimport { useQuery } from 'react-query';\nimport { getGenreById } from '../../../utils/utils';\nimport { MovieGenre } from '../extra/MovieGenre';\n\nexport function Rate(): ReactElement {\n    const [cookies, setCookie, removeCookie] = useCookies(['reco']);\n    let { isLoading, error, data }: any = useQuery<any, any>('ratedata', async () =>\n        fetch((process.env.REACT_APP_URL || 'localhost') + '/user/' + cookies?.auth?.username).then((res) => res.json())\n    );\n\n    const [showAmount, setShowAmount] = React.useState(5);\n    console.log(data);\n\n    const movie_list = React.useMemo(() => {\n        if (isLoading) return <Skeleton width=\"100%\" height=\"100px\" />;\n        const movies = [];\n        for (let i = 0; i < data?.unratedMovies?.length || 0; i++) {\n            if (i >= showAmount) break;\n            movies.push(<MovieDetails movie_data={data?.unratedMovies[i]} index={i} />);\n        }\n        return (\n            <SimpleGrid columns={1} spacing={1}>\n                {movies}\n            </SimpleGrid>\n        );\n    }, [data, showAmount]);\n    return (\n        <Box mr=\"15px\" ml=\"15px\">\n            {movie_list}\n            {showAmount < data?.unratedMovies?.length && (\n                <Button borderRadius=\"0px\" width=\"100%\" mt={1} onClick={() => setShowAmount(showAmount + 5)}>\n                    Load more\n                </Button>\n            )}\n        </Box>\n    );\n}\nfunction MovieDetails({ movie_data, index }: any) {\n    const [hover, setHover] = React.useState(-1);\n    const { colorMode, toggleColorMode } = useColorMode();\n    const is_light: boolean = colorMode == 'light';\n    const [movie, setMovie] = React.useState();\n    const [cookies, setCookie, removeCookie] = useCookies(['reco']);\n    const [hide, setHide] = React.useState(false);\n    // let { isLoading, error, data }: any = useQuery<any, any>([`movie_data_${index}`, index], async () =>\n    //     fetch((process.env.REACT_APP_URL || 'localhost') + '/movie/' + movie_data._id).then((res) => res.json())\n    // );\n    // console.log({new_data: data});\n    const [data, setData] = React.useState<any>();\n    React.useEffect(() => {\n        fetch((process.env.REACT_APP_URL || 'localhost') + '/movie/' + movie_data._id)\n            .then((res) => res.json())\n            .then((res) => {\n                setData(res);\n            });\n        console.log((process.env.REACT_APP_URL || 'localhost') + '/movie/' + movie_data._id);\n    });\n    const vote = (rating: number) => {\n        if (!data) return;\n        console.log({ data });\n\n        fetch((process.env.REACT_APP_URL || 'localhost') + '/vote/' + cookies?.auth?.username, {\n            method: 'PUT', // *GET, POST, PUT, DELETE, etc.\n            mode: 'cors', // no-cors, *cors, same-origin\n            cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n            credentials: 'same-origin', // include, *same-origin, omit\n            headers: {\n                'Content-Type': 'application/json',\n                // 'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            redirect: 'follow', // manual, *follow, error\n            referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n            body: JSON.stringify({\n                _id: data._id,\n                userRating: rating,\n            }), // body data type must match \"Content-Type\" header\n        }).then(() => setHide(true));\n    };\n    if (hide) return <></>;\n    if (!data) return <Skeleton width=\"100%\" height=\"100px\" />;\n    return (\n        <Flex\n            bg={is_light ? 'gray.100' : 'gray.700'}\n            padding=\"5px 5px 5px 5px\"\n            transition=\"ease-in-out height 0.5s\"\n            direction=\"row\"\n            justify=\"space-between\"\n            height={'80px'}\n        >\n            <Flex direction=\"row\">\n                <Image height=\"100%\" src={data?.poster_path} alt=\"Dan Abramov\" border=\"1px solid white\" />\n                <Flex direction=\"column\" justify=\"flex-start\" height=\"100%\" ml=\"15px\">\n                    <Heading size=\"lg\" mb=\"5px\">\n                        {data.title}\n                    </Heading>\n                    <Flex direction=\"row\" mb=\"10px\">\n                        {data?.genre_ids?.map((genre: string) => (\n                            <MovieGenre mr=\"5px\" children={getGenreById(genre)} />\n                        ))}\n                    </Flex>\n                </Flex>\n            </Flex>\n            <Flex direction=\"column\" height=\"100%\" justify=\"flex-start\" mr=\"15px\" mt=\"20px\">\n                <Flex direction=\"row\">\n                    {new Array(10).fill(0).map((a: any, i: number) => {\n                        const color: string = i <= hover ? 'yellow.300' : is_light ? 'gray.300' : 'white';\n                        return (\n                            <IconButton\n                                aria-label=\"\"\n                                variant=\"ghost\"\n                                color={color}\n                                mr=\"3px\"\n                                icon=\"star\"\n                                onClick={() => vote(i + 1)}\n                                onMouseEnter={() => setHover(i)}\n                                onMouseLeave={() => setHover(-1)}\n                            />\n                        );\n                    })}\n                </Flex>\n            </Flex>\n        </Flex>\n    );\n}\n\n/* \n\"{\n  \"movie_data\": {\n    \"_id\": \"5fa74a1433af7d2a2ad94ef6\",\n    \"popularity\": 139.434,\n    \"vote_count\": 48,\n    \"video\": false,\n    \"poster_path\": \"http://image.tmdb.org/t/p/w500/22jwKxZf4rcrmh2NS07SZAQYYNY.jpg\",\n    \"id\": 604578,\n    \"adult\": false,\n    \"backdrop_path\": \"/324jDHMRHWZ8HLbjRJNwVPYJZT0.jpg\",\n    \"original_language\": \"en\",\n    \"original_title\": \"Spontaneous\",\n    \"genre_ids\": [\n      35,\n      27,\n      878,\n      10749\n    ],\n    \"title\": \"Spontaneous\",\n    \"vote_average\": 7.3,\n    \"overview\": \"When students in their high school begin inexplicably exploding (literally...), seniors Mara and Dylan struggle to survive in a world where each moment may be their last.\",\n    \"release_date\": \"2020-10-02\"\n  }\n}\"\n\n*/\n","import { ColorModeProvider, CSSReset, ThemeProvider } from '@chakra-ui/core';\r\nimport React, { ReactElement } from 'react';\r\nimport customTheme from './components/theme/custom_theme';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport { useCookies } from 'react-cookie';\r\nimport { Navbar } from './components/design/navbar/Navbar';\r\n\r\n// Routes\r\nimport { Home } from './components/design/home/Home';\r\nimport { List } from './components/design/list/List';\r\nimport { Swipe } from './components/design/swipe/Swipe';\r\nimport { Login } from './components/design/login/Login';\r\nimport { Rate } from './components/design/rate/Rate';\r\n\r\nfunction AppBase(): ReactElement {\r\n    const [validAuth, setValidAuth] = React.useState<boolean>(true);\r\n    const [cookies, setCookie, removeCookie] = useCookies(['reco']);\r\n    React.useEffect(() => {\r\n        if (cookies && !cookies?.auth) setValidAuth(false);\r\n        // else removeCookie(\"reco\")\r\n    }, []);\r\n\r\n    return (\r\n        <Router>\r\n            {!validAuth ? <Redirect to=\"/login\" /> : <Navbar />}\r\n\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    <Home />\r\n                </Route>\r\n                <Route exact path=\"/list\">\r\n                    <List />\r\n                </Route>\r\n                <Route path=\"/login\">\r\n                    <Login />\r\n                </Route>\r\n                <Route path=\"/rate\">\r\n                    <Rate />\r\n                </Route>\r\n                <Route exact path=\"/swipe\">\r\n                    <Swipe />\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\nfunction App() {\r\n    return (\r\n        <ThemeProvider theme={customTheme}>\r\n            <ColorModeProvider>\r\n                <CSSReset />\r\n                <AppBase />\r\n            </ColorModeProvider>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === '[::1]' ||\r\n        // 127.0.0.0/8 are considered localhost for IPv4.\r\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then((registration) => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: { 'Service-Worker': 'script' },\r\n    })\r\n        .then((response) => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then((registration) => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.');\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then((registration) => {\r\n                registration.unregister();\r\n            })\r\n            .catch((error) => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './default/serviceWorker';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}