{"version":3,"sources":["components/theme/custom_theme.ts","components/icons/LogoLight.tsx","components/icons/LogoDark.tsx","components/design/navbar/Navbar.tsx","components/design/home/Home.tsx","utils/utils.ts","components/design/extra/MovieGenre.tsx","components/design/list/List.tsx","components/design/swipe/Swipe.tsx","components/design/login/LoginComponents.tsx","components/design/login/Login.tsx","components/design/rate/Rate.tsx","components/design/new/New.tsx","App.tsx","default/serviceWorker.ts","index.tsx"],"names":["theme","colors","light","dark","LogoLight","xmlns","viewBox","width","height","id","data-name","fill","x","y","d","LogoDark","text_color","Navbar","useDisclosure","isOpen","onOpen","onClose","useColorMode","colorMode","toggleColorMode","useCookies","cookies","removeCookie","useState","topgenres","setTopGenres","is_light","color_mode_icon","color_mode_color","history","useHistory","randomColor","Math","floor","random","length","React","useEffect","fetch","auth","username","then","res","json","Logout","push","window","location","reload","NavbarDrawer","Drawer","placement","borderBottomWidth","mb","Flex","direction","justify","align","Avatar","name","src","Button","variantColor","variant","size","ml","onClick","Box","mt","Heading","slice","map","e","Stack","genre","p","Progress","value","color","padding","IconButton","aria-label","icon","as","Link","to","Spinner","cursor","Home","SimpleGrid","columns","spacing","mr","genres","getGenreById","find","MovieGenre","props","border","borderRadius","fontWeight","fontSize","textTransform","List","data","setData","showAmount","setShowAmount","movie_list","useMemo","Skeleton","movies","i","ratedMovies","MovieDetails","movie_data","index","hover","setHover","_id","bg","transition","Image","poster_path","alt","title","genre_ids","children","className","Text","release_date","overview","Array","a","userRating","Icon","Swipe","setReload","rating","setRating","movie_thumb","position","top","w","whiteSpace","textAlign","borderColor","wrap","maxWidth","h","Slider","max","min","defaultValue","onChange","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","LoginBox","alignItems","Login","setCookie","LoginForm","onSubmit","values","actions","password","setSubmitting","validateName","initialValues","handleSubmit","validate","field","form","FormControl","isInvalid","errors","touched","FormLabel","htmlFor","Input","placeholder","FormErrorMessage","PasswordInput","isLoading","isSubmitting","type","show","setShow","InputGroup","pr","Rate","unratedMovies","hide","setHide","vote","onMouseEnter","onMouseLeave","New","PopoverForm","setValues","setValue","selected","setSelected","toast","useToast","ref","useRef","MovieOption","movie","highlighted","setHighlited","current","focus","pl","dangerouslySetInnerHTML","__html","replace","RegExp","q","target","process","focusBorderColor","isDisabled","description","status","duration","isClosable","catch","addMovie","AppBase","exact","path","App","ThemeProvider","customTheme","ColorModeProvider","CSSReset","Boolean","hostname","match","library","add","faCheck","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.867bb9b2.chunk.js","sourcesContent":["import { theme } from '@chakra-ui/core';\r\n\r\ntype Colors = {\r\n\r\n};\r\n\r\nconst light: Colors = {\r\n\r\n};\r\n\r\nconst dark: Colors = {\r\n\r\n};\r\n\r\nexport default {\r\n    ...theme,\r\n    colors: {\r\n        ...theme.colors,\r\n        light,\r\n        dark\r\n    },\r\n};\r\n","import React, { ReactElement } from 'react';\n\nexport function LogoLight(): ReactElement {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 192.26 51.3\" width=\"192.26\" height=\"\">\n            <g id=\"Layer_2\" data-name=\"Layer 2\">\n                <g id=\"Layer_3\" data-name=\"Layer 3\">\n                    <rect fill=\"#e53f3e\" width=\"46.75\" height=\"12.69\" />\n                    <rect fill=\"#dd6b26\" x=\"8.54\" y=\"12.69\" width=\"38.21\" height=\"12.69\" />\n                    <rect fill=\"#3881c3\" x=\"20.54\" y=\"37.7\" width=\"26.71\" height=\"12.69\" />\n                    <rect fill=\"#d69e2d\" x=\"15.04\" y=\"25.2\" width=\"31.71\" height=\"12.69\" />\n                    <path d=\"M80.11,50.42h-13l-7.84-13c-.59-1-1.15-1.86-1.69-2.64a14.88,14.88,0,0,0-1.64-2,6.41,6.41,0,0,0-1.72-1.27,4.43,4.43,0,0,0-2-.44H49.17v19.3H37.82V0h18Q74.16,0,74.17,13.72a14.18,14.18,0,0,1-.81,4.87,13.33,13.33,0,0,1-2.29,4,14.3,14.3,0,0,1-3.57,3.1,18.83,18.83,0,0,1-4.65,2v.14A7.14,7.14,0,0,1,65,29a15.8,15.8,0,0,1,2,1.85A26.5,26.5,0,0,1,69,33.14c.59.81,1.14,1.6,1.63,2.38ZM49.17,8.52v14h4.92A8.13,8.13,0,0,0,60,20.43a7,7,0,0,0,2.25-5.3q0-6.61-7.91-6.61Z\" />\n                    <path d=\"M114.28,35.59H90.8q.56,7.83,9.87,7.84a19.28,19.28,0,0,0,10.45-2.82v8q-5,2.67-13,2.67-8.72,0-13.53-4.83T79.79,33q0-9,5.2-14.2a17.36,17.36,0,0,1,12.8-5.24q7.88,0,12.18,4.68t4.31,12.69ZM104,28.77Q104,21,97.72,21a6,6,0,0,0-4.62,2.22,10,10,0,0,0-2.37,5.52Z\" />\n                    <path d=\"M148.17,49.12q-3.76,2.18-10.86,2.18-8.3,0-13.43-5a17.36,17.36,0,0,1-5.14-13q0-9.18,5.51-14.47T139,13.54c4.24,0,7.31.57,9.21,1.69v9.42a12.69,12.69,0,0,0-7.77-2.6,10.23,10.23,0,0,0-7.58,2.8A10.42,10.42,0,0,0,130,32.56a10.28,10.28,0,0,0,2.67,7.51,9.84,9.84,0,0,0,7.35,2.72,14.61,14.61,0,0,0,8.12-2.6Z\" />\n                    <path d=\"M172.6,51.3q-9,0-14.15-5t-5.15-13.7q0-8.93,5.35-14t14.45-5.05q9,0,14.06,5.05t5.1,13.34q0,9-5.26,14.17T172.6,51.3Zm.29-29.25a7.39,7.39,0,0,0-6.12,2.71c-1.45,1.8-2.18,4.36-2.18,7.66q0,10.38,8.37,10.37,8,0,8-10.65Q180.94,22,172.89,22.05Z\" />\n                </g>\n            </g>\n        </svg>\n    );\n}\n","import React, { ReactElement } from 'react';\n\nexport function LogoDark(): ReactElement {\n    const text_color: string = \"#FFFFFFEB\";\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 192.26 51.3\" width=\"192.26\" height=\"51.3\">\n            <g id=\"Layer_2\" data-name=\"Layer 2\">\n                <g id=\"Layer_1-2\" data-name=\"Layer 1\">\n                    <rect fill=\"#f16465\" width=\"46.75\" height=\"12.69\" />\n                    <rect fill=\"#ec8933\" x=\"8.54\" y=\"12.69\" width=\"38.21\" height=\"12.69\" />\n                    <rect fill=\"#4b98d3\" x=\"20.54\" y=\"37.7\" width=\"26.71\" height=\"12.69\" />\n                    <rect fill=\"#ecc94b\" x=\"15.04\" y=\"25.2\" width=\"31.71\" height=\"12.69\" />\n                    <path\n                        fill={text_color}\n                        d=\"M80.11,50.42h-13l-7.84-13c-.59-1-1.15-1.86-1.69-2.64a14.88,14.88,0,0,0-1.64-2,6.41,6.41,0,0,0-1.72-1.27,4.43,4.43,0,0,0-2-.44H49.17v19.3H37.82V0h18Q74.16,0,74.17,13.72a14.18,14.18,0,0,1-.81,4.87,13.33,13.33,0,0,1-2.29,4,14.3,14.3,0,0,1-3.57,3.1,18.83,18.83,0,0,1-4.65,2v.14A7.14,7.14,0,0,1,65,29a15.8,15.8,0,0,1,2,1.85A26.5,26.5,0,0,1,69,33.14c.59.81,1.14,1.6,1.63,2.38ZM49.17,8.52v14h4.92A8.13,8.13,0,0,0,60,20.43a7,7,0,0,0,2.25-5.3q0-6.61-7.91-6.61Z\"\n                    />\n                    <path\n                        fill={text_color}\n                        d=\"M114.28,35.59H90.8q.56,7.83,9.87,7.84a19.28,19.28,0,0,0,10.45-2.82v8q-5,2.67-13,2.67-8.72,0-13.53-4.83T79.79,33q0-9,5.2-14.2a17.36,17.36,0,0,1,12.8-5.24q7.88,0,12.18,4.68t4.31,12.69ZM104,28.77Q104,21,97.72,21a6,6,0,0,0-4.62,2.22,10,10,0,0,0-2.37,5.52Z\"\n                    />\n                    <path\n                        fill={text_color}\n                        d=\"M148.17,49.12q-3.76,2.18-10.86,2.18-8.3,0-13.43-5a17.36,17.36,0,0,1-5.14-13q0-9.18,5.51-14.47T139,13.54c4.24,0,7.31.57,9.21,1.69v9.42a12.69,12.69,0,0,0-7.77-2.6,10.23,10.23,0,0,0-7.58,2.8A10.42,10.42,0,0,0,130,32.56a10.28,10.28,0,0,0,2.67,7.51,9.84,9.84,0,0,0,7.35,2.72,14.63,14.63,0,0,0,8.12-2.6Z\"\n                    />\n                    <path\n                        fill={text_color}\n                        d=\"M172.6,51.3q-9,0-14.15-5t-5.15-13.7q0-8.93,5.35-14t14.45-5.05q9,0,14.06,5.05t5.1,13.34q0,9-5.26,14.17T172.6,51.3Zm.29-29.25a7.39,7.39,0,0,0-6.12,2.71c-1.45,1.8-2.18,4.36-2.18,7.66q0,10.38,8.37,10.37,8,0,8-10.65Q180.94,22,172.89,22.05Z\"\n                    />\n                </g>\n            </g>\n        </svg>\n    );\n}\n","import React, { ReactElement, useState } from 'react';\r\nimport {\r\n    Flex,\r\n    Drawer,\r\n    useDisclosure,\r\n    DrawerOverlay,\r\n    DrawerContent,\r\n    DrawerHeader,\r\n    DrawerBody,\r\n    IconButton,\r\n    useColorMode,\r\n    Heading,\r\n    DrawerCloseButton,\r\n    List,\r\n    ListItem,\r\n    Avatar,\r\n    Button,\r\n    Box,\r\n    Progress,\r\n    Spinner,\r\n    Stack,\r\n} from '@chakra-ui/core';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useCookies } from 'react-cookie';\r\nimport { LogoLight } from '../../icons/LogoLight';\r\nimport { LogoDark } from '../../icons/LogoDark';\r\nexport function Navbar(): ReactElement {\r\n    const { isOpen, onOpen, onClose } = useDisclosure();\r\n    const { colorMode, toggleColorMode } = useColorMode();\r\n    const [cookies, setCookie, removeCookie] = useCookies(['reco']);\r\n    const [topgenres, setTopGenres] = useState<any>([]);\r\n    const is_light: boolean = colorMode == 'light';\r\n    const color_mode_icon: any = is_light ? 'sun' : 'moon';\r\n    const color_mode_color: any = is_light ? 'yellow' : 'gray';\r\n    const history = useHistory();\r\n\r\n    const randomColor = () => {\r\n        const colors = ['red', 'orange', 'yellow', 'green', 'teal', 'cyan', 'purple'];\r\n\r\n        return colors[Math.floor(Math.random() * colors.length)];\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        fetch((process.env.REACT_APP_URL || '') + '/topgenres/' + cookies?.auth?.username)\r\n            .then((res) => res.json())\r\n            .then((res) => {\r\n                setTopGenres(res);\r\n            });\r\n    }, []);\r\n\r\n    const Logout = () => {\r\n        removeCookie('auth');\r\n        history.push('/');\r\n        window.location.reload();\r\n    };\r\n\r\n    const NavbarDrawer = (): ReactElement => {\r\n        \r\n        return (\r\n            <Drawer placement=\"right\" onClose={onClose} isOpen={isOpen}>\r\n                <DrawerOverlay />\r\n                <DrawerContent>\r\n                    <DrawerCloseButton />\r\n                    <DrawerHeader borderBottomWidth=\"1px\" mb={1}>\r\n                        <Flex direction=\"row\" justify=\"flex-start\" align=\"center\">\r\n                            <Avatar name=\"Dan Abrahmov\" src=\"https://bit.ly/dan-abramov\" />\r\n                            <Button variantColor=\"red\" variant=\"outline\" size=\"sm\" ml=\"15px\" onClick={Logout}>\r\n                                Logout\r\n                            </Button>\r\n                        </Flex>\r\n                        <Box mt={2}>Dan Abrahmov</Box>\r\n                    </DrawerHeader>\r\n                    <DrawerBody>\r\n                        <Heading size=\"md\">Top favourite genres</Heading>\r\n                        {topgenres.slice(0, 3).map((e: any) => (\r\n                            <Stack mt={1}>\r\n                                <Flex direction=\"column\">\r\n                                    <Box><strong>{e?.genre}</strong> - {Math.floor(e.p * 10000) / 100}%</Box>\r\n                                    <Progress value={e?.p * 100} color={randomColor()} mb={1}/>\r\n                                </Flex>\r\n                            </Stack>\r\n                        ))}\r\n                    </DrawerBody>\r\n                </DrawerContent>\r\n            </Drawer>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Flex width=\"100%\" direction=\"column\" justify=\"flex-start\" align=\"center\" padding=\"15px 15px 30px 15px\">\r\n            <Flex width=\"100%\" direction=\"row\" justify=\"space-between\" align=\"center\">\r\n                <IconButton\r\n                    variant=\"ghost\"\r\n                    variantColor={color_mode_color}\r\n                    aria-label=\"Call Sage\"\r\n                    icon={color_mode_icon}\r\n                    size=\"lg\"\r\n                    onClick={() => toggleColorMode()}\r\n                />\r\n                <Box as={Link} {...{ to: '/' }}>\r\n                    { is_light ? <LogoLight /> : <LogoDark /> }\r\n                </Box>\r\n                { topgenres.length == 0 ? <Spinner size=\"xl\" /> : <Avatar name=\"Dan Abrahmov\" cursor=\"pointer\" src=\"https://bit.ly/dan-abramov\" onClick={onOpen} />}\r\n                \r\n            </Flex>\r\n            <NavbarDrawer />\r\n        </Flex>\r\n    );\r\n}\r\n","import { Button, SimpleGrid } from '@chakra-ui/core';\r\nimport React, { ReactElement } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport function Home(): ReactElement {\r\n    const randomColor = () => {\r\n        const colors = ['red', 'orange', 'yellow', 'green', 'teal', 'cyan', 'purple'];\r\n\r\n        return colors[Math.floor(Math.random() * colors.length)];\r\n    };\r\n\r\n    return (\r\n        <SimpleGrid columns={2} spacing={10} mr=\"30px\" ml=\"30px\" mt=\"50px\">\r\n            <Button\r\n                as={Link}\r\n                {...{ to: '/swipe' }}\r\n                height=\"100px\"\r\n                variant=\"outline\"\r\n                variantColor={randomColor()}\r\n                size=\"lg\"\r\n            >\r\n                Recommend\r\n            </Button>\r\n            <Button\r\n                as={Link}\r\n                {...{ to: '/new' }}\r\n                height=\"100px\"\r\n                variant=\"outline\"\r\n                variantColor={randomColor()}\r\n                size=\"lg\"\r\n            >\r\n                Search\r\n            </Button>\r\n            <Button\r\n                as={Link}\r\n                {...{ to: '/list' }}\r\n                height=\"100px\"\r\n                variant=\"outline\"\r\n                variantColor={randomColor()}\r\n                size=\"lg\"\r\n            >\r\n                Evaluated Movies\r\n            </Button>\r\n            <Button\r\n                as={Link}\r\n                {...{ to: '/rate' }}\r\n                height=\"100px\"\r\n                variant=\"outline\"\r\n                variantColor={randomColor()}\r\n                size=\"lg\"\r\n            >\r\n                Unevaluated Movies\r\n            </Button>\r\n\r\n        </SimpleGrid>\r\n    );\r\n}\r\n","export const genres = [\r\n    {\r\n        id: 28,\r\n        name: 'Action',\r\n    },\r\n    {\r\n        id: 12,\r\n        name: 'Adventure',\r\n    },\r\n    {\r\n        id: 16,\r\n        name: 'Animation',\r\n    },\r\n    {\r\n        id: 35,\r\n        name: 'Comedy',\r\n    },\r\n    {\r\n        id: 80,\r\n        name: 'Crime',\r\n    },\r\n    {\r\n        id: 99,\r\n        name: 'Documentary',\r\n    },\r\n    {\r\n        id: 18,\r\n        name: 'Drama',\r\n    },\r\n    {\r\n        id: 10751,\r\n        name: 'Family',\r\n    },\r\n    {\r\n        id: 14,\r\n        name: 'Fantasy',\r\n    },\r\n    {\r\n        id: 36,\r\n        name: 'History',\r\n    },\r\n    {\r\n        id: 27,\r\n        name: 'Horror',\r\n    },\r\n    {\r\n        id: 10402,\r\n        name: 'Music',\r\n    },\r\n    {\r\n        id: 9648,\r\n        name: 'Mystery',\r\n    },\r\n    {\r\n        id: 10749,\r\n        name: 'Romance',\r\n    },\r\n    {\r\n        id: 878,\r\n        name: 'Science Fiction',\r\n    },\r\n    {\r\n        id: 10770,\r\n        name: 'TV Movie',\r\n    },\r\n    {\r\n        id: 53,\r\n        name: 'Thriller',\r\n    },\r\n    {\r\n        id: 10752,\r\n        name: 'War',\r\n    },\r\n    {\r\n        id: 37,\r\n        name: 'Western',\r\n    },\r\n];\r\n\r\nexport function getGenreById(id: any) {\r\n    return genres.find((genre: any) => genre.id == id)?.name;\r\n}\r\n","import { Box } from '@chakra-ui/core';\nimport React, { ReactElement } from 'react';\n\nexport function MovieGenre({ ...props }: any): ReactElement {\n    return (\n        <Box\n            {...props}\n            border=\"1px solid #9F7AEA\"\n            mb=\"5px\"\n            borderRadius=\"4px\"\n            padding=\"0px 4px 0px 4px\"\n            fontWeight=\"500\"\n            color=\"#9F7AEA\"\n            fontSize={10}\n            textTransform=\"capitalize\"\n        />\n    );\n}\n","import { Box, Flex, Text, SimpleGrid, Image, Button, Skeleton, Heading, Icon, useColorMode } from '@chakra-ui/core';\r\nimport React, { ReactElement } from 'react';\r\nimport { useCookies } from 'react-cookie';\r\nimport { getGenreById } from '../../../utils/utils';\r\nimport { MovieGenre } from '../extra/MovieGenre';\r\nimport './list.css';\r\n\r\nexport function List(): ReactElement {\r\n    const [cookies, setCookie, removeCookie] = useCookies(['reco']);\r\n    const [data, setData] = React.useState<any>();\r\n    const [showAmount, setShowAmount] = React.useState(5);\r\n\r\n    React.useEffect(() => {\r\n        fetch((process.env.REACT_APP_URL || '') + '/user/' + cookies?.auth?.username)\r\n            .then((res) => res.json())\r\n            .then((res) => setData(res));\r\n    }, []);\r\n\r\n    const movie_list = React.useMemo(() => {\r\n        if (!data) return <Skeleton width=\"100%\" height=\"100px\" />;\r\n        const movies = [];\r\n        for (let i = 0; i < data?.ratedMovies?.length || 0; i++) {\r\n            if (i >= showAmount) break;\r\n            movies.push(<MovieDetails movie_data={data?.ratedMovies[i]} index={i} />);\r\n        }\r\n        return (\r\n            <SimpleGrid columns={1} spacing={1}>\r\n                {movies}\r\n            </SimpleGrid>\r\n        );\r\n    }, [data, showAmount]);\r\n    return (\r\n        <Box mr=\"15px\" ml=\"15px\">\r\n            {movie_list}\r\n            {showAmount < data?.ratedMovies?.length && (\r\n                <Button borderRadius=\"0px\" width=\"100%\" mt={1} onClick={() => setShowAmount(showAmount + 5)}>\r\n                    Load more\r\n                </Button>\r\n            )}\r\n        </Box>\r\n    );\r\n}\r\nfunction MovieDetails({ movie_data, index }: any) {\r\n    const [hover, setHover] = React.useState(false);\r\n    const { colorMode, toggleColorMode } = useColorMode();\r\n    const is_light: boolean = colorMode == 'light';\r\n    const [cookies, setCookie, removeCookie] = useCookies(['reco']);\r\n    const [data, setData] = React.useState<any>();\r\n\r\n    React.useEffect(() => {\r\n        fetch((process.env.REACT_APP_URL || '') + '/movie/' + movie_data._id)\r\n            .then((res) => res.json())\r\n            .then((res) => {\r\n                setData(res);\r\n            });\r\n    }, []);\r\n\r\n    if (!data) return <Skeleton width=\"100%\" height=\"100px\" />;\r\n    return (\r\n        <Flex\r\n            bg={is_light ? 'gray.100' : 'gray.700'}\r\n            padding=\"5px 5px 5px 5px\"\r\n            // onMouseEnter={() => setHover(true)}\r\n            // onMouseLeave={() => setHover(false)}\r\n            onClick={() => setHover(!hover)}\r\n            transition=\"ease-in-out height 0.5s\"\r\n            direction=\"row\"\r\n            justify=\"space-between\"\r\n            height={hover ? '300px' : '80px'}\r\n        >\r\n            <Flex direction=\"row\">\r\n                <Image height=\"100%\" src={data?.poster_path} alt=\"Dan Abramov\" border=\"1px solid white\" />\r\n                <Flex direction=\"column\" justify=\"flex-start\" height=\"100%\" ml=\"15px\">\r\n                    <Heading size=\"lg\" mb=\"5px\">\r\n                        {data.title}\r\n                    </Heading>\r\n                    <Flex direction=\"row\" mb=\"10px\">\r\n                        {data?.genre_ids?.map((genre: string) => (\r\n                            <MovieGenre mr=\"5px\" children={getGenreById(genre)} />\r\n                        ))}\r\n                    </Flex>\r\n\r\n                    {hover && (\r\n                        <Flex direction=\"column\" justify=\"flex-start\" className=\"list-animation\">\r\n                            <Text>\r\n                                <b>Release date:</b> {data?.release_date}\r\n                            </Text>\r\n                            <Text>{data?.overview}</Text>\r\n                        </Flex>\r\n                    )}\r\n                </Flex>\r\n            </Flex>\r\n            <Flex direction=\"column\" height=\"100%\" justify=\"flex-start\" mr=\"15px\" mt=\"20px\">\r\n                <Flex direction=\"row\">\r\n                    {new Array(10).fill(0).map((a: any, i: number) => {\r\n                        const color: string =\r\n                            i < movie_data.userRating ? 'yellow.300' : is_light ? 'gray.300' : 'white';\r\n                        return <Icon name=\"star\" color={color} mr=\"3px\" size=\"30px\" />;\r\n                    })}\r\n                </Flex>\r\n            </Flex>\r\n        </Flex>\r\n    );\r\n}\r\n","import React, { ReactElement } from 'react';\r\nimport {\r\n    Flex,\r\n    Heading,\r\n    Image,\r\n    useColorMode,\r\n    Slider,\r\n    SliderTrack,\r\n    SliderFilledTrack,\r\n    SliderThumb,\r\n    Box,\r\n    Icon,\r\n    Button,\r\n    Skeleton,\r\n} from '@chakra-ui/core';\r\nimport { MovieGenre } from '../extra/MovieGenre';\r\nimport { useCookies } from 'react-cookie';\r\nimport { getGenreById } from '../../../utils/utils';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nexport function Swipe(): ReactElement {\r\n    const [reload, setReload] = React.useState(true);\r\n    const [cookies, setCookie, removeCookie] = useCookies(['reco']);\r\n    const [data, setData] = React.useState<any>();\r\n    const [rating, setRating] = React.useState(5);\r\n    const { colorMode } = useColorMode();\r\n    const is_light: boolean = colorMode == 'light';\r\n\r\n    const max_rating: number = 10;\r\n    const randomColor = () => {\r\n        const colors = ['white', 'red', 'orange', 'yellow', 'green', 'teal', 'blue', 'cyan', 'purple', 'pink'];\r\n\r\n        return colors[Math.floor(Math.random() * colors.length)];\r\n    };\r\n\r\n\r\n    React.useEffect(() => {\r\n        fetch((process.env.REACT_APP_URL || '') + '/recommend/' + cookies?.auth?.username)\r\n            .then((res) => res?.json())\r\n            .then((res) => {\r\n                return fetch((process.env.REACT_APP_URL || '') + '/movie/' + res._id).then((res) => res.json());\r\n            })\r\n            .then((res) => setData(res))\r\n            .then(() => setRating(5));\r\n    }, [reload]);\r\n\r\n    const movie_thumb = React.useMemo(\r\n        () => (\r\n            <Box position=\"absolute\" top={5}>\r\n                <Flex direction=\"column\" justify=\"flex-start\" align=\"center\" w=\"200px\">\r\n                    {!data ? (\r\n                        <Skeleton width=\"100%\" height=\"300px\" />\r\n                    ) : (\r\n                        <>\r\n                            <Heading size=\"lg\" mb=\"10px\" width=\"400px\" whiteSpace=\"normal\" textAlign=\"center\">\r\n                                {data.title}\r\n                            </Heading>\r\n                            <Image\r\n                                width=\"250px\"\r\n                                src={data?.poster_path}\r\n                                alt=\"Dan Abramov\"\r\n                                border=\"2px solid white\"\r\n                                borderColor={is_light ? 'black' : 'white'}\r\n                            />\r\n                            <Flex\r\n                                direction=\"row\"\r\n                                justify=\"center\"\r\n                                align=\"flex-start\"\r\n                                mt=\"10px\"\r\n                                wrap=\"wrap\"\r\n                                maxWidth=\"100%\"\r\n                                position=\"relative\"\r\n                            >\r\n                                {data.genre_ids?.map((genre: string, i: number) => (\r\n                                    <MovieGenre\r\n                                        mr={i !== data.genre_ids.length - 1 ? '5px' : '0px'}\r\n                                        children={getGenreById(genre)}\r\n                                    />\r\n                                ))}\r\n                            </Flex>\r\n                        </>\r\n                    )}\r\n                </Flex>\r\n            </Box>\r\n        ),\r\n        [data]\r\n    );\r\n\r\n    const vote = () => {\r\n        if (!data) return;\r\n\r\n        fetch((process.env.REACT_APP_URL || '') + '/vote/' + cookies?.auth?.username, {\r\n            method: 'PUT',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow',\r\n            referrerPolicy: 'no-referrer',\r\n            body: JSON.stringify({\r\n                _id: data._id,\r\n                userRating: rating,\r\n            }),\r\n        }).then(() => setReload(!reload));\r\n    };\r\n\r\n    return (\r\n        <Flex direction=\"row\" justify=\"center\" width=\"100%\">\r\n        <Flex width=\"500px\" direction=\"column\" justify=\"center\" align=\"center\" mt=\"10px\">\r\n            <Flex h=\"10px\" width=\"580px\" direction=\"row\" justify=\"space-evenly\">\r\n                {new Array(max_rating).fill(0).map((a: any, i: number) => {\r\n                    const color: string = i < rating ? `yellow.300` : is_light ? 'gray.300' : 'gray.100';\r\n                    return <Icon name=\"star\" color={color}size=\"30px\" />;\r\n                })}\r\n            </Flex>\r\n            <Slider\r\n                max={max_rating}\r\n                min={1}\r\n                defaultValue={rating}\r\n                value={rating}\r\n                onChange={(value: number) => setRating(value)}\r\n                mt=\"50px\"\r\n            >\r\n                <SliderTrack />\r\n                <SliderFilledTrack />\r\n                <SliderThumb>\r\n                    <Box color=\"tomato\" />\r\n                    {movie_thumb}\r\n                </SliderThumb>\r\n            </Slider>\r\n            <Flex mt=\"500px\" direction=\"row\" w=\"80%\" justify=\"space-evenly\">\r\n                <Button width=\"30%\" variant=\"solid\" variantColor=\"green\" onClick={vote} children=\"Vote\" />\r\n                <Button\r\n                    width=\"30%\"\r\n                    variant=\"solid\"\r\n                    variantColor=\"blue\"\r\n                    onClick={() => setReload(!reload)}\r\n                    children=\"Skip\"\r\n                />\r\n            </Flex>\r\n        </Flex>\r\n        </Flex>\r\n    );\r\n}\r\n","import React, { ReactElement } from 'react';\r\nimport { Flex } from '@chakra-ui/core';\r\n\r\nexport const LoginBox = ({ ...props }: any): ReactElement => (\r\n    <Flex\r\n        {...props} \r\n        width=\"100%\"\r\n        direction=\"column\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        mt=\"50px\"\r\n    />\r\n);\r\n","import React, { ReactElement } from 'react';\r\nimport { useCookies } from 'react-cookie';\r\nimport {\r\n    FormControl,\r\n    FormLabel,\r\n    Input,\r\n    InputGroup,\r\n    InputRightElement,\r\n    IconButton,\r\n    FormErrorMessage,\r\n    Button,\r\n    Heading,\r\n} from '@chakra-ui/core';\r\nimport { Formik, Field } from 'formik';\r\nimport { LoginBox } from './LoginComponents';\r\nimport { LoginFormInputs } from './LoginTypes';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport function Login(): ReactElement {\r\n    const [cookies, setCookie, removeCookie] = useCookies(['reco']);\r\n    const history = useHistory();\r\n\r\n    const onSubmit = (values: LoginFormInputs, actions: any) => {\r\n        setCookie('auth', {\r\n            username: values.username,\r\n            password: values.password,\r\n        });\r\n        history.push('/');\r\n        actions.setSubmitting(false);\r\n        window.location.reload();\r\n    };\r\n\r\n    return (\r\n        <LoginBox>\r\n            <Heading mb={3}>Login</Heading>\r\n            <LoginForm onSubmit={onSubmit} />\r\n        </LoginBox>\r\n    );\r\n}\r\n\r\nfunction LoginForm({ onSubmit, ...props }: any): ReactElement {\r\n    function validateName(value: any) {\r\n        return false;\r\n        let error;\r\n        if (!value) {\r\n            error = 'Name is required';\r\n        } else if (value !== 'Naruto') {\r\n            error = \"Jeez! You're not a fan 😱\";\r\n        }\r\n        return error;\r\n    }\r\n\r\n    return (\r\n        <Formik initialValues={{}} onSubmit={onSubmit}>\r\n            {(props: any) => (\r\n                <form onSubmit={props.handleSubmit}>\r\n                    <Field name=\"username\" validate={validateName}>\r\n                        {({ field, form }: any) => (\r\n                            <FormControl isInvalid={form.errors.name && form.touched.name} mb={3}>\r\n                                <FormLabel htmlFor=\"username\">Username</FormLabel>\r\n                                <Input {...field} id=\"username\" placeholder=\"Username\" />\r\n                                <FormErrorMessage>{form.errors.name}</FormErrorMessage>\r\n                            </FormControl>\r\n                        )}\r\n                    </Field>\r\n                    <Field name=\"password\" validate={validateName}>\r\n                        {({ field, form }: any) => (\r\n                            <FormControl isInvalid={form.errors.name && form.touched.name}>\r\n                                <FormLabel htmlFor=\"password\">Password</FormLabel>\r\n                                <PasswordInput {...field} id=\"password\" placeholder=\"password\" />\r\n                                <FormErrorMessage>{form.errors.name}</FormErrorMessage>\r\n                            </FormControl>\r\n                        )}\r\n                    </Field>\r\n                    <Button mt={4} variantColor=\"green\" isLoading={props.isSubmitting} type=\"submit\" width=\"100%\">\r\n                        Submit\r\n                    </Button>\r\n                </form>\r\n            )}\r\n        </Formik>\r\n    );\r\n}\r\n\r\nfunction PasswordInput({ ...props }: any): ReactElement {\r\n    const [show, setShow] = React.useState(false);\r\n    const handleClick = () => setShow(!show);\r\n\r\n    return (\r\n        <InputGroup size=\"md\">\r\n            <Input {...props} pr=\"4.5rem\" type={show ? 'text' : 'password'} placeholder=\"Enter password\" />\r\n            <InputRightElement width=\"3rem\">\r\n                <IconButton\r\n                    h=\"1.75rem\"\r\n                    size=\"sm\"\r\n                    onClick={handleClick}\r\n                    aria-label=\"password_input\"\r\n                    icon={show ? 'view' : 'view-off'}\r\n                />\r\n            </InputRightElement>\r\n        </InputGroup>\r\n    );\r\n}\r\n","import { Box, Flex, SimpleGrid, Image, Button, Skeleton, Heading, useColorMode, IconButton } from '@chakra-ui/core';\r\nimport React, { ReactElement } from 'react';\r\nimport { useCookies } from 'react-cookie';\r\nimport { getGenreById } from '../../../utils/utils';\r\nimport { MovieGenre } from '../extra/MovieGenre';\r\n\r\nexport function Rate(): ReactElement {\r\n    const [cookies, setCookie, removeCookie] = useCookies(['reco']);\r\n    const [data, setData] = React.useState<any>();\r\n\r\n    const [showAmount, setShowAmount] = React.useState(5);\r\n\r\n    React.useEffect(() => {\r\n        fetch((process.env.REACT_APP_URL || '') + '/user/' + cookies?.auth?.username)\r\n            .then((res) => res.json())\r\n            .then((res) => setData(res));\r\n    }, []);\r\n\r\n    const movie_list = React.useMemo(() => {\r\n        if (!data) return <Skeleton width=\"100%\" height=\"100px\" />;\r\n        const movies = [];\r\n        for (let i = 0; i < data?.unratedMovies?.length || 0; i++) {\r\n            if (i >= showAmount) break;\r\n            movies.push(<MovieDetails movie_data={data?.unratedMovies[i]} index={i} />);\r\n        }\r\n        return (\r\n            <SimpleGrid columns={1} spacing={1}>\r\n                {movies}\r\n            </SimpleGrid>\r\n        );\r\n    }, [data, showAmount]);\r\n    return (\r\n        <Box mr=\"15px\" ml=\"15px\">\r\n            {movie_list}\r\n            {showAmount < data?.unratedMovies?.length && (\r\n                <Button borderRadius=\"0px\" width=\"100%\" mt={1} onClick={() => setShowAmount(showAmount + 5)}>\r\n                    Load more\r\n                </Button>\r\n            )}\r\n        </Box>\r\n    );\r\n}\r\nfunction MovieDetails({ movie_data, index }: any) {\r\n    const [hover, setHover] = React.useState(-1);\r\n    const { colorMode } = useColorMode();\r\n    const is_light: boolean = colorMode == 'light';\r\n    const [cookies, setCookie, removeCookie] = useCookies(['reco']);\r\n    const [hide, setHide] = React.useState(false);\r\n\r\n    const [data, setData] = React.useState<any>();\r\n    React.useEffect(() => {\r\n        fetch((process.env.REACT_APP_URL || '') + '/movie/' + movie_data._id)\r\n            .then((res) => res.json())\r\n            .then((res) => {\r\n                setData(res);\r\n            });\r\n    }, []);\r\n    const vote = (rating: number) => {\r\n        if (!data) return;\r\n\r\n        fetch((process.env.REACT_APP_URL || '') + '/vote/' + cookies?.auth?.username, {\r\n            method: 'PUT',\r\n            mode: 'cors',\r\n            cache: 'no-cache',\r\n            credentials: 'same-origin',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            redirect: 'follow',\r\n            referrerPolicy: 'no-referrer',\r\n            body: JSON.stringify({\r\n                _id: data._id,\r\n                userRating: rating,\r\n            }),\r\n        }).then(() => setHide(true));\r\n    };\r\n    if (hide) return <></>;\r\n    if (!data) return <Skeleton width=\"100%\" height=\"100px\" />;\r\n    return (\r\n        <Flex\r\n            bg={is_light ? 'gray.100' : 'gray.700'}\r\n            padding=\"5px 5px 5px 5px\"\r\n            transition=\"ease-in-out height 0.5s\"\r\n            direction=\"row\"\r\n            justify=\"space-between\"\r\n            height={'80px'}\r\n        >\r\n            <Flex direction=\"row\">\r\n                <Image height=\"100%\" src={data?.poster_path} alt=\"Dan Abramov\" border=\"1px solid white\" />\r\n                <Flex direction=\"column\" justify=\"flex-start\" height=\"100%\" ml=\"15px\">\r\n                    <Heading size=\"lg\" mb=\"5px\">\r\n                        {data.title}\r\n                    </Heading>\r\n                    <Flex direction=\"row\" mb=\"10px\">\r\n                        {data?.genre_ids?.map((genre: string) => (\r\n                            <MovieGenre mr=\"5px\" children={getGenreById(genre)} />\r\n                        ))}\r\n                    </Flex>\r\n                </Flex>\r\n            </Flex>\r\n            <Flex direction=\"column\" height=\"100%\" justify=\"center\" align=\"center\" mr=\"15px\">\r\n                <Flex direction=\"row\">\r\n                    {new Array(10).fill(0).map((a: any, i: number) => {\r\n                        const color: string = i <= hover ? 'yellow.300' : is_light ? 'gray.300' : 'white';\r\n                        return (\r\n                            <IconButton\r\n                                aria-label=\"\"\r\n                                variant=\"ghost\"\r\n                                color={color}\r\n                                mr=\"3px\"\r\n                                icon=\"star\"\r\n                                onClick={() => vote(i + 1)}\r\n                                onMouseEnter={() => setHover(i)}\r\n                                onMouseLeave={() => setHover(-1)}\r\n                            />\r\n                        );\r\n                    })}\r\n                </Flex>\r\n            </Flex>\r\n        </Flex>\r\n    );\r\n}\r\n","import {\n    Button,\n    Flex,\n    Heading,\n    Image,\n    Input,\n    InputGroup,\n    InputRightElement,\n    Text,\n    useColorMode,\n    useToast,\n} from '@chakra-ui/core';\nimport React, { ReactElement } from 'react';\nimport { useCookies } from 'react-cookie';\nimport { getGenreById } from '../../../utils/utils';\nimport { MovieGenre } from '../extra/MovieGenre';\n\nexport function New(): ReactElement {\n    return (\n        <Flex direction=\"row\" justify=\"center\" width=\"100%\">\n            <PopoverForm />\n        </Flex>\n    );\n}\nconst PopoverForm = () => {\n    const [cookies, setCookie, removeCookie] = useCookies(['reco']);\n    const { colorMode, toggleColorMode } = useColorMode();\n    const is_light: boolean = colorMode == 'light';\n    const [values, setValues] = React.useState([]);\n    const [value, setValue] = React.useState('');\n    const [selected, setSelected] = React.useState<any>();\n    const [add, setAdd] = React.useState(false);\n    const toast = useToast();\n    const ref: any = React.useRef();\n\n    const updateValues = (q: any) => {\n        if (selected?.title) setSelected({});\n        setValue(q);\n        if (q == '') return setValues([]);\n        return fetch((process.env.REACT_APP_URL || 'localhost') + `/movie?q=${q}`)\n            .then((res) => res.json())\n            .then((res) => setValues(res));\n    };\n\n    const MovieOption = ({ movie }: any) => {\n        const [highlighted, setHighlited] = React.useState(false);\n        return (\n            <Flex\n                direction=\"row\"\n                justify=\"flex-start\"\n                onClick={() => {\n                    setValue(movie.title);\n                    setSelected(movie);\n                    ref.current.focus();\n                }}\n                cursor=\"pointer\"\n                bg={highlighted ? is_light ? 'gray.100' : 'gray.600' : ''}\n                onMouseEnter={() => setHighlited(true)}\n                onMouseLeave={() => setHighlited(false)}\n                pl={1}\n            >\n                <div dangerouslySetInnerHTML={{ __html: movie.title.replace(new RegExp(value, 'ig'), \"<b>$&</b>\") }} />\n            </Flex>\n        );\n    };\n\n    const addMovie = (data: any) => {\n        if (!data) return;\n\n        fetch((process.env.REACT_APP_URL || '') + '/addunrated/' + cookies?.auth?.username, {\n            method: 'PUT',\n            mode: 'cors',\n            cache: 'no-cache',\n            credentials: 'same-origin',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            redirect: 'follow',\n            referrerPolicy: 'no-referrer',\n            body: JSON.stringify({\n                _id: data._id,\n                userRating: 0,\n            }),\n        })\n            .then(() =>\n                toast({\n                    title: data.title,\n                    description: 'was added.',\n                    status: 'success',\n                    duration: 3000,\n                    isClosable: true,\n                    position: \"bottom-right\",\n                })\n            )\n            .catch(() =>\n                toast({\n                    title: data.title,\n                    description: 'failed to add.',\n                    status: 'error',\n                    duration: 3000,\n                    isClosable: true,\n                    position: \"bottom-right\",\n                })\n            );\n    };\n\n    return (\n        <Flex direction=\"column\" width=\"100%\" pl={10} pr={10}>\n            <Flex></Flex>\n            <InputGroup size=\"lg\">\n                <Input\n                    ref={ref}\n                    variant=\"flushed\"\n                    placeholder=\"Enter name\"\n                    onChange={(e: any) => updateValues(e.target.value)}\n                    width=\"100%\"\n                    focusBorderColor={values?.length > 0 || value == '' ? 'teal.400' : 'red.400'}\n                    mb={1}\n                    pl={1}\n                    value={value}\n                />\n                <InputRightElement width=\"4.5rem\">\n                    <Button h=\"1.75rem\" size=\"md\" variant=\"outline\" variantColor=\"teal\" isDisabled={!selected?.title} onClick={() => addMovie(selected)}>\n                        Add\n                    </Button>\n                </InputRightElement>\n            </InputGroup>\n\n            <Flex direction=\"column\">\n                {values.map((value: any) => (\n                    <MovieOption movie={value} />\n                ))}\n            </Flex>\n\n            {selected?.title && (\n                <Flex\n                    bg={is_light ? 'gray.100' : 'gray.700'}\n                    padding=\"5px 5px 5px 5px\"\n                    transition=\"ease-in-out height 0.5s\"\n                    direction=\"row\"\n                    justify=\"space-between\"\n                    mt=\"15px\"\n                    p={3}\n                >\n                    <Image height=\"200px\" src={selected?.poster_path} alt=\"Dan Abramov\" border=\"1px solid white\" />\n                    <Flex direction=\"column\" justify=\"flex-start\" height=\"100%\" ml=\"30px\">\n                        <Heading size=\"lg\" mb=\"5px\">\n                            {selected?.title}\n                        </Heading>\n                        <Flex direction=\"row\" mb=\"10px\">\n                            {selected?.genre_ids?.map((genre: string) => (\n                                <MovieGenre mr=\"5px\" children={getGenreById(genre)} />\n                            ))}\n                        </Flex>\n                        <Flex direction=\"column\" justify=\"flex-start\">\n                            <Text>\n                                <b>Release date:</b> {selected?.release_date}\n                            </Text>\n                            <Text>{selected?.overview}</Text>\n                        </Flex>\n                    </Flex>\n                </Flex>\n            )}\n        </Flex>\n    );\n};\n","import { ColorModeProvider, CSSReset, ThemeProvider } from '@chakra-ui/core';\r\nimport React, { ReactElement } from 'react';\r\nimport customTheme from './components/theme/custom_theme';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport { useCookies } from 'react-cookie';\r\nimport { Navbar } from './components/design/navbar/Navbar';\r\n\r\n// Routes\r\nimport { Home } from './components/design/home/Home';\r\nimport { List } from './components/design/list/List';\r\nimport { Swipe } from './components/design/swipe/Swipe';\r\nimport { Login } from './components/design/login/Login';\r\nimport { Rate } from './components/design/rate/Rate';\r\nimport { New } from './components/design/new/New';\r\n\r\nfunction AppBase(): ReactElement {\r\n    const [cookies, setCookie, removeCookie] = useCookies(['reco']);\r\n    return (\r\n        <Router>\r\n            {!cookies?.auth ? <Redirect to=\"/login\" /> : <Navbar />}\r\n\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    <Home />\r\n                </Route>\r\n                <Route exact path=\"/list\">\r\n                    <List />\r\n                </Route>\r\n                <Route path=\"/login\">\r\n                    <Login />\r\n                </Route>\r\n                <Route path=\"/rate\">\r\n                    <Rate />\r\n                </Route>\r\n                <Route path=\"/new\">\r\n                    <New />\r\n                </Route>\r\n                <Route exact path=\"/swipe\">\r\n                    <Swipe />\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\n\r\nfunction App() {\r\n    return (\r\n        <ThemeProvider theme={customTheme}>\r\n            <ColorModeProvider>\r\n                <CSSReset />\r\n                <AppBase />\r\n            </ColorModeProvider>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === '[::1]' ||\r\n        // 127.0.0.0/8 are considered localhost for IPv4.\r\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then((registration) => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: { 'Service-Worker': 'script' },\r\n    })\r\n        .then((response) => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then((registration) => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.');\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then((registration) => {\r\n                registration.unregister();\r\n            })\r\n            .catch((error) => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './default/serviceWorker';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\r\n\r\nlibrary.add(faCheck);\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}